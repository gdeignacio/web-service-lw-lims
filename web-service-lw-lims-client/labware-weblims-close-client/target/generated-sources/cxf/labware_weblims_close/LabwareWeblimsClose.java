
/*
 * 
 */

package labware_weblims_close;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.2.12
 * Wed Jul 06 14:47:00 CEST 2016
 * Generated source version: 2.2.12
 * 
 */


@WebServiceClient(name = "labware_weblims_close", 
                  wsdlLocation = "file:/home/gdeignacio/Proyectos/maven/web-service-lw-lims/web-service-lw-lims-client/labware-weblims-close-client/src/main/resources/wsdl/labware_weblims_close",
                  targetNamespace = "labware_weblims_close") 
public class LabwareWeblimsClose extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("labware_weblims_close", "labware_weblims_close");
    public final static QName LabwareWeblimsCloseHttpSoap11Endpoint = new QName("labware_weblims_close", "labware_weblims_closeHttpSoap11Endpoint");
    public final static QName LabwareWeblimsCloseHttpSoap12Endpoint = new QName("labware_weblims_close", "labware_weblims_closeHttpSoap12Endpoint");
    static {
        URL url = null;
        try {
            url = new URL("file:/home/gdeignacio/Proyectos/maven/web-service-lw-lims/web-service-lw-lims-client/labware-weblims-close-client/src/main/resources/wsdl/labware_weblims_close");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/home/gdeignacio/Proyectos/maven/web-service-lw-lims/web-service-lw-lims-client/labware-weblims-close-client/src/main/resources/wsdl/labware_weblims_close");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public LabwareWeblimsClose(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public LabwareWeblimsClose(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public LabwareWeblimsClose() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public LabwareWeblimsClose(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }
    public LabwareWeblimsClose(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public LabwareWeblimsClose(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns LabwareWeblimsClosePortType
     */
    @WebEndpoint(name = "labware_weblims_closeHttpSoap11Endpoint")
    public LabwareWeblimsClosePortType getLabwareWeblimsCloseHttpSoap11Endpoint() {
        return super.getPort(LabwareWeblimsCloseHttpSoap11Endpoint, LabwareWeblimsClosePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LabwareWeblimsClosePortType
     */
    @WebEndpoint(name = "labware_weblims_closeHttpSoap11Endpoint")
    public LabwareWeblimsClosePortType getLabwareWeblimsCloseHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(LabwareWeblimsCloseHttpSoap11Endpoint, LabwareWeblimsClosePortType.class, features);
    }
    /**
     * 
     * @return
     *     returns LabwareWeblimsClosePortType
     */
    @WebEndpoint(name = "labware_weblims_closeHttpSoap12Endpoint")
    public LabwareWeblimsClosePortType getLabwareWeblimsCloseHttpSoap12Endpoint() {
        return super.getPort(LabwareWeblimsCloseHttpSoap12Endpoint, LabwareWeblimsClosePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LabwareWeblimsClosePortType
     */
    @WebEndpoint(name = "labware_weblims_closeHttpSoap12Endpoint")
    public LabwareWeblimsClosePortType getLabwareWeblimsCloseHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(LabwareWeblimsCloseHttpSoap12Endpoint, LabwareWeblimsClosePortType.class, features);
    }

}
