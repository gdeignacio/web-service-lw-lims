
/*
 * 
 */

package com.labware.webservice;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.2.12
 * Wed Jul 06 14:46:55 CEST 2016
 * Generated source version: 2.2.12
 * 
 */


@WebServiceClient(name = "REPORTSBEAN", 
                  wsdlLocation = "http://esaninf32.caib.es:8080/WebLIMS/services/REPORTSBEAN?wsdl",
                  targetNamespace = "http://www.labware.com/webservice") 
public class REPORTSBEAN extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://www.labware.com/webservice", "REPORTSBEAN");
    public final static QName REPORTSBEANHttpSoap11Endpoint = new QName("http://www.labware.com/webservice", "REPORTSBEANHttpSoap11Endpoint");
    public final static QName REPORTSBEANHttpSoap12Endpoint = new QName("http://www.labware.com/webservice", "REPORTSBEANHttpSoap12Endpoint");
    static {
        URL url = null;
        try {
            url = new URL("http://esaninf32.caib.es:8080/WebLIMS/services/REPORTSBEAN?wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from http://esaninf32.caib.es:8080/WebLIMS/services/REPORTSBEAN?wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public REPORTSBEAN(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public REPORTSBEAN(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public REPORTSBEAN() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public REPORTSBEAN(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }
    public REPORTSBEAN(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public REPORTSBEAN(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns REPORTSBEANPortType
     */
    @WebEndpoint(name = "REPORTSBEANHttpSoap11Endpoint")
    public REPORTSBEANPortType getREPORTSBEANHttpSoap11Endpoint() {
        return super.getPort(REPORTSBEANHttpSoap11Endpoint, REPORTSBEANPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns REPORTSBEANPortType
     */
    @WebEndpoint(name = "REPORTSBEANHttpSoap11Endpoint")
    public REPORTSBEANPortType getREPORTSBEANHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(REPORTSBEANHttpSoap11Endpoint, REPORTSBEANPortType.class, features);
    }
    /**
     * 
     * @return
     *     returns REPORTSBEANPortType
     */
    @WebEndpoint(name = "REPORTSBEANHttpSoap12Endpoint")
    public REPORTSBEANPortType getREPORTSBEANHttpSoap12Endpoint() {
        return super.getPort(REPORTSBEANHttpSoap12Endpoint, REPORTSBEANPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns REPORTSBEANPortType
     */
    @WebEndpoint(name = "REPORTSBEANHttpSoap12Endpoint")
    public REPORTSBEANPortType getREPORTSBEANHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(REPORTSBEANHttpSoap12Endpoint, REPORTSBEANPortType.class, features);
    }

}
